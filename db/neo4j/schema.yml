# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of ActiveNode to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.yml definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using neo4j:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended that you check this file into your version control system.

---
:constraints:
- CONSTRAINT ON ( `neo4j::migrations::schemamigration`:`Neo4j::Migrations::SchemaMigration`
  ) ASSERT `neo4j::migrations::schemamigration`.migration_id IS UNIQUE
- CONSTRAINT ON ( award:Award ) ASSERT award.uuid IS UNIQUE
- CONSTRAINT ON ( awardtitle:AwardTitle ) ASSERT awardtitle.uuid IS UNIQUE
- CONSTRAINT ON ( business:Business ) ASSERT business.uuid IS UNIQUE
- CONSTRAINT ON ( businessprofile:BusinessProfile ) ASSERT businessprofile.uuid IS
  UNIQUE
- CONSTRAINT ON ( city:City ) ASSERT city.uuid IS UNIQUE
- CONSTRAINT ON ( comment:Comment ) ASSERT comment.uuid IS UNIQUE
- CONSTRAINT ON ( content:Content ) ASSERT content.uuid IS UNIQUE
- CONSTRAINT ON ( country:Country ) ASSERT country.uuid IS UNIQUE
- CONSTRAINT ON ( creative:Creative ) ASSERT creative.uuid IS UNIQUE
- CONSTRAINT ON ( creativeprofile:CreativeProfile ) ASSERT creativeprofile.uuid IS
  UNIQUE
- CONSTRAINT ON ( designation:Designation ) ASSERT designation.uuid IS UNIQUE
- CONSTRAINT ON ( education:Education ) ASSERT education.uuid IS UNIQUE
- CONSTRAINT ON ( educationinstitution:EducationInstitution ) ASSERT educationinstitution.uuid
  IS UNIQUE
- CONSTRAINT ON ( fieldsofstudy:FieldsOfStudy ) ASSERT fieldsofstudy.uuid IS UNIQUE
- CONSTRAINT ON ( post:Post ) ASSERT post.uuid IS UNIQUE
- CONSTRAINT ON ( productiontype:ProductionType ) ASSERT productiontype.uuid IS UNIQUE
- CONSTRAINT ON ( project:Project ) ASSERT project.uuid IS UNIQUE
- CONSTRAINT ON ( projectprofile:ProjectProfile ) ASSERT projectprofile.uuid IS UNIQUE
- CONSTRAINT ON ( projectstagesdesired:ProjectStagesDesired ) ASSERT projectstagesdesired.uuid
  IS UNIQUE
- CONSTRAINT ON ( reply:Reply ) ASSERT reply.uuid IS UNIQUE
- CONSTRAINT ON ( role:Role ) ASSERT role.uuid IS UNIQUE
- CONSTRAINT ON ( storytypeforpreference:StoryTypeForPreference ) ASSERT storytypeforpreference.uuid
  IS UNIQUE
- CONSTRAINT ON ( user:User ) ASSERT user.uuid IS UNIQUE
- CONSTRAINT ON ( usergeneratedpost:UserGeneratedPost ) ASSERT usergeneratedpost.uuid
  IS UNIQUE
:indexes:
- INDEX ON :Post(created_at)
- INDEX ON :User(fableId)
- INDEX ON :User(generatorId)
:versions:
- '20170210053512'
- '20170210053637'
- '20170212024133'
- '20170214053901'
- '20170214054248'
- '20170214054613'
- '20170214131637'
- '20170214132016'
- '20170214191221'
- '20170215054006'
- '20170215054343'
- '20170215055019'
- '20170215090755'
- '20170215100230'
- '20170215110803'
- '20170215111057'
- '20170215111446'
- '20170216055537'
- '20170408063250'
- '20170408064634'
- '20170426121412'
- '20170607084617'
- '20170607084749'
- '20170609100602'
- '20180116112239'
- '20180116112246'
- '20180116112252'
